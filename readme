Readme for OilChecker application
Copyright 2020 Kerry Loux

See LICENSE file for license details.

To build on clean install of Raspian Buster:

1. Install openssl library:
  $ cd <directory of your choice>
  $ git clone git://git.openssl.org/openssl.git
  $ cd openssl
  $ ./Configure linux-armv4 no-ssl2 no-ssl3 no-comp
  $ make depend
  $ make
  $ sudo make install
  
2. Install libcurl (more detail available here: https://curl.se/docs/install.html):
  $ cd <directory of your choice>
  $ sudo apt install libtool autoconf
  $ git clone git://github.com/bagder/curl.git
  $ cd curl
  $ autoreconf -fi
  $ ./configure --with-ssl
  $ make
  $ sudo make install
  
3. Build the project:
  $ cd <directory of your choice>
  $ git clone https://github.com/KerryL/oilChecker.git
  $ cd oilChecker
  $ git submodule init
  $ git submodule update   <--- see notes about this step below in 3a
  $ make
  
3a. I linked the submodules with ssh.  If you're not me, you'll want to add remotes using the https url.  If you are me, note that I had to do the following in order to avoid errors (due to a bug?) when cloning submodules using a password-protected ssh key:
  $ sudo apt install keychain
  $ vi ~/.bashrc
  Add the following to the end of .bashrc:
    keychain ~/.ssh/<file name of private key>
    . ~/.keychain/$HOSTNAME-sh

4. Tell the system to allow use of the 1-wire temperature sensor interface:
  $ sudo vi /boot/config.txt
  Add the following to the end of config.txt:
    dtoverlay=w1-gpio

5. Configure the system to run the application on startup:
TODO
  $

A note on the email implementation:
This application is designed to send email by interfacing to Google's Gmail API and supports OAuth2 for authorization.  To make this work, you need to:
- Visit https://console.developers.google.com/
- Set up a project
- Enable the Gmail API for your project (/auth/gmail.compose)
- Create "OAuth Client ID" credentials for a "TV and Limited Input" type device
- Add your Client ID and Client Secret for your new credentials to the oilChecker config file (using the OATH2_CLIENT_ID and OATH2_CLIENT_SECRET fields)

When you first create your project, the application will be unpublished, which means that credentials will be for "Test Users" and will expire every 7 days.

See:  https://developers.google.com/identity/protocols/oauth2/limited-input-device
